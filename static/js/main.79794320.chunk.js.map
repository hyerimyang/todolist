{"version":3,"sources":["components/TodoTemplate.js","TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","onClick","TodoListBlock","TodoList","todos","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79794320.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n  position: relative;\r\n  width: 500px;\r\n  height: 768px;\r\n  margin: 0 auto;\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst TodoTemplate = ({ children }) => {\r\n  return (\r\n    <TodoTemplateBlock>{children}</TodoTemplateBlock>\r\n  )\r\n}\r\n\r\nexport default TodoTemplate;","import React, { useReducer, createContext, useContext, useRef  } from 'react';\r\n\r\n// 초기값\r\nconst initialTodos = [\r\n  {\r\n    id: 1,\r\n    text: '아침 요가 다녀오기',\r\n    done: 'true'\r\n  },\r\n  {\r\n    id: 2,\r\n    text: 'React 공부하기',\r\n    done: 'true'\r\n  }\r\n]\r\n\r\nfunction todoReducer (state, action) {\r\n  switch (action.type) {\r\n    case 'CREATE' : \r\n      return state.concat(action.todo);\r\n    case 'TOGGLE' :\r\n      return state.map(todo =>\r\n        todo.id === action.id ? {...todo, done: !todo.done} : todo)\r\n    case 'REMOVE' :\r\n      return state.filter(todo => todo.id !== action.id) \r\n  \r\n    default:\r\n      throw new Error(`Unhandled action type : ${action.type}`)\r\n  }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport const TodoProvider = ({ children }) => {\r\n  const [ state, dispatch ] = useReducer(todoReducer, initialTodos);\r\n  const nextId = useRef(3); // 새로운 항목을 추가할 때 사용할 고유 id \r\n\r\n  return (\r\n    <TodoStateContext.Provider value={state}>\r\n      <TodoDispatchContext.Provider value={dispatch}>\r\n        <TodoNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </TodoNextIdContext.Provider>\r\n      </TodoDispatchContext.Provider>\r\n    </TodoStateContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useTodoState(){\r\n  return useContext(TodoStateContext)\r\n}\r\n\r\nexport function useTodoDispatch(){\r\n  return useContext(TodoDispatchContext)\r\n}\r\n\r\nexport function useTodoNextId() {\r\n  return useContext(TodoNextIdContext)\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../TodoContext'\r\n\r\nconst TodoHeadBlock = styled.div`\r\n  padding: 20px 32px;\r\n  border-bottom: 1px solid #e9ecef;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 30px;\r\n    color: #343a40;\r\n  }\r\n  .day {\r\n    margin-top: 10px;\r\n    color: #868e96;\r\n    font-size: 19px;\r\n  }\r\n  .tasks-left {\r\n    color: #9f75c1;\r\n    font-size: 18px;\r\n    margin-top: 40px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst TodoHead = () => {\r\n  const todos = useTodoState();\r\n  const undoneTasks = todos.filter(todo => !todo.done);\r\n\r\n  const today = new Date();\r\n  const dateString = today.toLocaleDateString('ko-KR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  });\r\n  const dayName = today.toLocaleDateString('ko-Kr', { weekday: 'long'})\r\n\r\n  return(\r\n    <TodoHeadBlock>\r\n      <h1>{dateString}</h1>\r\n      <div className=\"day\">{dayName}</div>\r\n      <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\r\n    </TodoHeadBlock>\r\n  )\r\n}\r\n\r\nexport default TodoHead;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete } from 'react-icons/md';\r\nimport { useTodoDispatch } from '../TodoContext';\r\n\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #dee2e6;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #9f75c1;\r\n  }\r\n  display: none;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n\r\n  &:hover {\r\n    ${Remove} {\r\n      display: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 12px;\r\n  border: 1px solid #ced4da;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n\r\n  ${props => \r\n    props.done && css`\r\n      border: 1px solid #9f75c1;\r\n      color: #9f75c1;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 18px;\r\n  color: #666666;\r\n  ${props =>\r\n    props.done && css`\r\n      color: #ced4da;\r\n    `}\r\n`;\r\n\r\n\r\n\r\nconst TodoItem = ({ done, id, text }) => {\r\n  const dispatch = useTodoDispatch();\r\n  const onToggle = () => dispatch({ type : 'TOGGLE', id })\r\n  const onRemove = () => dispatch({ type : 'REMOVE', id })\r\n\r\n  return (\r\n    <TodoItemBlock>\r\n      <CheckCircle done={done} onClick={onToggle}>\r\n        {done && <MdDone />}\r\n      </CheckCircle>\r\n\r\n      <Text done={done}>{text}</Text>\r\n\r\n      <Remove onClick={onRemove}>\r\n        <MdDelete />\r\n      </Remove>\r\n    </TodoItemBlock>\r\n  )\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../TodoContext';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoListBlock = styled.div`\r\n  flex: 1;\r\n  padding: 20px 32px 48px;\r\n  overflow-y: auto;\r\n  color: #777777;\r\n`;\r\n\r\nconst TodoList = () => {\r\n  const todos = useTodoState();\r\n\r\n  return(\r\n    <TodoListBlock>\r\n      {todos.map(todo => (\r\n        <TodoItem \r\n        key={todo.id}\r\n        id={todo.id}\r\n        text={todo.text}\r\n        done={todo.done}\r\n        />\r\n      ))}\r\n    </TodoListBlock>\r\n  )\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\r\n\r\nconst CircleButton = styled.button`\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  display: block;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f4a660;\r\n  transition: 0.125s all ease-in;\r\n  &:hover {\r\n    background: #ef9952;\r\n  }\r\n  &:active {\r\n    background: #9f75c1;\r\n  }\r\n  ${props => \r\n    props.open && css `\r\n      background: #966dc2;\r\n      &:hover {\r\n        background: #bb8bbe;\r\n      }\r\n      &:active {\r\n        background: #f4a660;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `\r\n  }\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding: 32px 32px 72px;\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst TodoCreate = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [value, setValue] = useState('');\r\n\r\n  const dispatch = useTodoDispatch();\r\n  const nextId = useTodoNextId();\r\n\r\n  const onToggle = () => setOpen(!open);\r\n  const onChange = e => setValue(e.target.value);\r\n  const onSubmit = e => {\r\n    e.preventDefault(); \r\n    dispatch({\r\n      type : 'CREATE',\r\n      todo: {\r\n        id: nextId.current,\r\n        text: value,\r\n        done: false\r\n      }\r\n    });\r\n    // 초기화\r\n    setValue('')\r\n    setOpen(false)\r\n    nextId.current += 1\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { open && (\r\n        <InsertFormPositioner>\r\n          <InsertForm onSubmit={onSubmit}>\r\n            <Input \r\n            autoFocus \r\n            placeholder=\"할 일 입력 후, Enter를 누르세요\" \r\n            onChange={onChange} \r\n            value={value} \r\n            />\r\n          </InsertForm>\r\n        </InsertFormPositioner>\r\n      )}\r\n\r\n      <CircleButton onClick={onToggle} open={open}>\r\n        <MdAdd />\r\n      </CircleButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoCreate;","import React from 'react';\r\nimport './App.css';\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport TodoTemplate from './components/TodoTemplate';\r\nimport TodoHead from './components/TodoHead';\r\nimport TodoList from './components/TodoList';\r\nimport TodoCreate from './components/TodoCreate';\r\nimport { TodoProvider } from './TodoContext'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background: url('background.jpg');\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <TodoProvider>\r\n        <GlobalStyle />\r\n\r\n        <TodoTemplate>\r\n          <TodoHead />\r\n          <TodoList />\r\n          <TodoCreate />\r\n        </TodoTemplate>\r\n        \r\n      </TodoProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}